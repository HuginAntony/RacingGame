// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Racing.DataAccess;

namespace Racing.DataAccess.Migrations
{
    [DbContext(typeof(RacingContext))]
    [Migration("20210122125528_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Racing.DataAccess.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Acceleration")
                        .HasColumnType("int");

                    b.Property<int>("Braking")
                        .HasColumnType("int");

                    b.Property<int>("CorneringAbility")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Car");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acceleration = 8,
                            Braking = 3,
                            CorneringAbility = 4,
                            Name = "CORV",
                            TopSpeed = 9
                        },
                        new
                        {
                            Id = 2,
                            Acceleration = 6,
                            Braking = 7,
                            CorneringAbility = 9,
                            Name = "GTR",
                            TopSpeed = 8
                        },
                        new
                        {
                            Id = 3,
                            Acceleration = 7,
                            Braking = 4,
                            CorneringAbility = 4,
                            Name = "MUSTANG",
                            TopSpeed = 9
                        });
                });

            modelBuilder.Entity("Racing.DataAccess.Entities.Track", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TrackPath")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("Track");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yas Marina",
                            TrackPath = "11110011100011001110011101"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Daytona",
                            TrackPath = "11111111001111110111100001"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
